To get a brand new server off the ground:

First, make sure to create it with a proper SSH keypair so you can log into the system.


```
sudo yum install -y git-core zlib zlib-devel gcc-c++ patch readline readline-devel libyaml-devel libffi-devel openssl-devel make bzip2 autoconf automake libtool bison curl sqlite-devel

# Install rbenv and ruby
git clone git://github.com/sstephenson/rbenv.git .rbenv
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile
exec $SHELL

git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bash_profile
exec $SHELL
rbenv install 2.6.6
rbenv global 2.6.6
gem install bundler
git clone git@github.com:whitebrick/fileslide-streamer.git

# Install 
sudo amazon-linux-extras install nginx1
sudo systemctl start nginx
sudo systemctl enable nginx
sudo systemctl status nginx # to check it's working
cd /etc/nginx/conf.d/
sudo nano custom_server.conf
# fill with:
# server {
#         listen 80;
#         listen [::]:80;
#         access_log /var/log/nginx/reverse-access.log;
#         error_log /var/log/nginx/reverse-error.log;
#         proxy_buffering off;
#         proxy_http_version 1.1;
#         location / {
#                     proxy_pass http://127.0.0.1:9292;
#   }
# }

sudo systemctl restart nginx
# Now verify you can reach it with curl or something on port 80.

# Setup a keypair for github
# see https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/connecting-to-github-with-ssh
# Add the public key to the repo as a "deploy key" in the settings part of the repo
# in the end, verify you can ssh to github from the repo.

# Setup ssh so that you can login to the box as the required user (default is `ec2-user`) without needing to supply 
# any password. Capistrano will need this anyway. To get it setup, add config for the box to ~/.ssh/config.

# test it out with `bundle exec cap staging deploy`
# You may have to comment out the `bind` directive in shared/puma.rb after the first deploy (which generates that file)
# but afterwards it should be fine
```
